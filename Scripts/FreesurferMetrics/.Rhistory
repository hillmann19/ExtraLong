mod <- lm(f,data = CNB_cross_tmp)
RT_cross_mod_output[[cntr]] <- mod
ylabels[cntr] <- ylabel
plot_titles[cntr] <- Plot_title
cntr <- cntr + 1
}
tab_model(RT_cross_mod_output[[1]],RT_cross_mod_output[[2]],RT_cross_mod_output[[3]],RT_cross_mod_output[[4]],RT_cross_mod_output[[5]],RT_cross_mod_output[[6]],RT_cross_mod_output[[7]],RT_cross_mod_output[[8]],RT_cross_mod_output[[9]],RT_cross_mod_output[[10]],RT_cross_mod_output[[11]],file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelOutput.html")
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelPlots.pdf",width = 14,height = 8)
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelPlots.pdf",width = 14,height = 8)
for(i in 1:length(RT_cross_mod_output)){
grid.arrange(visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels[i],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste(plot_titles[i],"Male")), visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels[i],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste(plot_titles[i],"Female")))
}
dev.off()
colnames(CNB_cross)
CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR"))
CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR")) %>%
colnames()
CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR"),matches("_PC$"),matches("ACC2$"),matches("_CAT$")) %>%
colnames()
response_cols_RT
CNB_cross %>%
select(matches("RTCR$"),matches("MRTC"),matches("TPRT")) %>%
select(!(matches("_AR$")|CPF_B.CPF_W_RTCR|SPCPTNL.SCPN_TPRT)) %>%
colnames()
colnames(CNB_cross)
CNB_cross %>%
select(!(contains("valid_code"))) %>%
select(ADT36_A.ADT36A_CR:VSPLOT15.VSPLOT15_RTCR) %>%
colnames()
View(codebook)
response_cols_CR <- CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR"),matches("_PC$"),matches("ACC2$"),matches("_CAT$")) %>%
colnames()
response_cols_CR
response_cols_CR <- CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR"),matches("_PC$"),matches("ACC2$"),matches("_CAT$")) %>%
select(-SPCPTNL.SCPN_TP) %>%
colnames()
response_cols_CR
CR_cross_mod_output <- list()
ylabels_CR <- c()
plot_titles_CR <- c()
cntr <- 1
for(test in response_cols_CR){
test_noPeriod <- str_replace_all(test,pattern = "\\.",replacement = "_")
test_split <- str_split(test_noPeriod,pattern = "_")[[1]]
test_prefix <- test_split[1]
test_suffix <- paste0("_",test_split[length(test_split)])
Plot_title <- Test_map %>%
filter(Prefix == test_prefix) %>%
pull(Test_name)
ylabel <- Metric_map %>%
filter(Suffix == test_suffix) %>%
pull(Label)
test_name <- paste(Plot_title,ylabel)
test_name_noN <- str_replace_all(test_name,pattern = " \n","")
test_name_no_space <- str_replace_all(test_name_noN,pattern = " ",replacement = "_")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "\\(|\\)",replacement = "")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "-",replacement = "_")
colnames(CNB_cross_tmp) <- ifelse(test == colnames(CNB_cross_tmp),test_name_no_space,colnames(CNB_cross_tmp))
f <- as.formula(paste(test_name_no_space,"~","test_sessions_v.gender + Age_centered + I(Age_centered^2) + I(Age_centered^3) + Test_Location + test_sessions_v.gender:Age_centered + test_sessions_v.gender:Test_Location + Test_Location:Age_centered + test_sessions_v.gender:Test_Location:Age_centered"))
mod <- lm(f,data = CNB_cross_tmp)
CR_cross_mod_output[[cntr]] <- mod
ylabels_CR[cntr] <- ylabel
plot_titles_CR[cntr] <- Plot_title
cntr <- cntr + 1
}
test_name_no_space
CR_cross_mod_output <- list()
ylabels_CR <- c()
plot_titles_CR <- c()
cntr <- 1
for(test in response_cols_CR){
test_noPeriod <- str_replace_all(test,pattern = "\\.",replacement = "_")
test_split <- str_split(test_noPeriod,pattern = "_")[[1]]
test_prefix <- test_split[1]
test_suffix <- paste0("_",test_split[length(test_split)])
Plot_title <- Test_map %>%
filter(Prefix == test_prefix) %>%
pull(Test_name)
ylabel <- Metric_map %>%
filter(Suffix == test_suffix) %>%
pull(Label)
test_name <- paste(Plot_title,ylabel)
test_name_noN <- str_replace_all(test_name,pattern = "\\(|\\)| \n","")
test_name_no_space <- str_replace_all(test_name_noN,pattern = " |-",replacement = "_")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "%",replacement = 'Percent')
colnames(CNB_cross_tmp) <- ifelse(test == colnames(CNB_cross_tmp),test_name_no_space,colnames(CNB_cross_tmp))
f <- as.formula(paste(test_name_no_space,"~","test_sessions_v.gender + Age_centered + I(Age_centered^2) + I(Age_centered^3) + Test_Location + test_sessions_v.gender:Age_centered + test_sessions_v.gender:Test_Location + Test_Location:Age_centered + test_sessions_v.gender:Test_Location:Age_centered"))
mod <- lm(f,data = CNB_cross_tmp)
CR_cross_mod_output[[cntr]] <- mod
ylabels_CR[cntr] <- ylabel
plot_titles_CR[cntr] <- Plot_title
cntr <- cntr + 1
}
test
colnames(CNB_cross_tmp)
CR_cross_mod_output <- list()
ylabels_CR <- c()
plot_titles_CR <- c()
cntr <- 1
CNB_cross_tmp <- CNB_cross %>%
rename(Test_Location = remote)
for(test in response_cols_CR){
test_noPeriod <- str_replace_all(test,pattern = "\\.",replacement = "_")
test_split <- str_split(test_noPeriod,pattern = "_")[[1]]
test_prefix <- test_split[1]
test_suffix <- paste0("_",test_split[length(test_split)])
Plot_title <- Test_map %>%
filter(Prefix == test_prefix) %>%
pull(Test_name)
ylabel <- Metric_map %>%
filter(Suffix == test_suffix) %>%
pull(Label)
test_name <- paste(Plot_title,ylabel)
test_name_noN <- str_replace_all(test_name,pattern = "\\(|\\)| \n","")
test_name_no_space <- str_replace_all(test_name_noN,pattern = " |-",replacement = "_")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "%",replacement = 'Percent')
colnames(CNB_cross_tmp) <- ifelse(test == colnames(CNB_cross_tmp),test_name_no_space,colnames(CNB_cross_tmp))
f <- as.formula(paste(test_name_no_space,"~","test_sessions_v.gender + Age_centered + I(Age_centered^2) + I(Age_centered^3) + Test_Location + test_sessions_v.gender:Age_centered + test_sessions_v.gender:Test_Location + Test_Location:Age_centered + test_sessions_v.gender:Test_Location:Age_centered"))
mod <- lm(f,data = CNB_cross_tmp)
CR_cross_mod_output[[cntr]] <- mod
ylabels_CR[cntr] <- ylabel
plot_titles_CR[cntr] <- Plot_title
cntr <- cntr + 1
}
tab_model(CR_cross_mod_output[[1]],CR_cross_mod_output[[2]],CR_cross_mod_output[[3]],CR_cross_mod_output[[4]],CR_cross_mod_output[[5]],CR_cross_mod_output[[6]],CR_cross_mod_output[[7]],CR_cross_mod_output[[8]],CR_cross_mod_output[[9]],CR_cross_mod_output[[10]],CR_cross_mod_output[[11]],file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelOutput.html")
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelPlots.pdf",width = 14,height = 8)
for(i in 1:length(RT_cross_mod_output)){
grid.arrange(visreg(CR_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[i],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste(plot_titles_CR[i],"Male")), visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[i],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste(plot_titles_CR[i],"Female")))
}
dev.off()
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelPlots.pdf",width = 14,height = 8)
for(i in 1:length(CR_cross_mod_output)){
grid.arrange(visreg(CR_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[i],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste(plot_titles_CR[i],"Male")), visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[i],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste(plot_titles_CR[i],"Female")))
}
dev.off()
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelPlots.pdf",width = 14,height = 8)
for(j in 1:length(CR_cross_mod_output)){
grid.arrange(visreg(CR_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste(plot_titles_CR[j],"Male")), visreg(RT_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste(plot_titles_CR[j],"Female")))
}
dev.off()
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelPlots.pdf",width = 14,height = 8)
for(j in 1:length(CR_cross_mod_output)){
grid.arrange(visreg(CR_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste(plot_titles_CR[j],"Male")), visreg(CR_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste(plot_titles_CR[j],"Female")))
}
dev.off()
response_cols_RT <- CNB_cross %>%
select(matches("RTCR$"),matches("MRTC"),matches("TPRT")) %>%
select(!(matches("_AR$")|CPF_B.CPF_W_RTCR|SPCPTNL.SCPN_TPRT)) %>%
colnames()
CNB_cross <- CNB_cross %>%
mutate(Age_centered = as.numeric(scale(test_sessions_v.age,center = T,scale = F)))
RT_cross_mod_output <- list()
ylabels <- c()
plot_titles <- c()
cntr <- 1
CNB_cross_tmp <- CNB_cross %>%
rename(Test_Location = remote)
for(test in response_cols_RT){
test_noPeriod <- str_replace_all(test,pattern = "\\.",replacement = "_")
test_split <- str_split(test_noPeriod,pattern = "_")[[1]]
test_prefix <- test_split[1]
test_suffix <- paste0("_",test_split[length(test_split)])
Plot_title <- Test_map %>%
filter(Prefix == test_prefix) %>%
pull(Test_name)
ylabel <- Metric_map %>%
filter(Suffix == test_suffix) %>%
pull(Label)
test_name <- paste(Plot_title,ylabel)
test_name_noN <- str_replace_all(test_name,pattern = " \n","")
test_name_no_space <- str_replace_all(test_name_noN,pattern = " ",replacement = "_")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "\\(|\\)",replacement = "")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "-",replacement = "_")
colnames(CNB_cross_tmp) <- ifelse(test == colnames(CNB_cross_tmp),test_name_no_space,colnames(CNB_cross_tmp))
f <- as.formula(paste(test_name_no_space,"~","test_sessions_v.gender + Age_centered + I(Age_centered^2) + I(Age_centered^3) + Test_Location + test_sessions_v.gender:Age_centered + test_sessions_v.gender:Test_Location + Test_Location:Age_centered + test_sessions_v.gender:Test_Location:Age_centered"))
mod <- lm(f,data = CNB_cross_tmp)
RT_cross_mod_output[[cntr]] <- mod
ylabels[cntr] <- ylabel
plot_titles[cntr] <- Plot_title
cntr <- cntr + 1
}
tab_model(RT_cross_mod_output[[1]],RT_cross_mod_output[[2]],RT_cross_mod_output[[3]],RT_cross_mod_output[[4]],RT_cross_mod_output[[5]],RT_cross_mod_output[[6]],RT_cross_mod_output[[7]],RT_cross_mod_output[[8]],RT_cross_mod_output[[9]],RT_cross_mod_output[[10]],RT_cross_mod_output[[11]],file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelOutput.html")
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelPlots.pdf",width = 14,height = 8)
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_RT_cross_ModelPlots.pdf",width = 14,height = 8)
for(i in 1:length(RT_cross_mod_output)){
grid.arrange(visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels[i],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste0(plot_titles[i],": Male")), visreg(RT_cross_mod_output[[i]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels[i],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste0(plot_titles[i],": Female")))
}
dev.off()
response_cols_CR <- CNB_cross %>%
select(matches("_CR$"),matches("_TP$"),matches("_MCR"),matches("_PC$"),matches("ACC2$"),matches("_CAT$")) %>%
select(-SPCPTNL.SCPN_TP) %>%
colnames()
CR_cross_mod_output <- list()
ylabels_CR <- c()
plot_titles_CR <- c()
cntr <- 1
CNB_cross_tmp <- CNB_cross %>%
rename(Test_Location = remote)
for(test in response_cols_CR){
test_noPeriod <- str_replace_all(test,pattern = "\\.",replacement = "_")
test_split <- str_split(test_noPeriod,pattern = "_")[[1]]
test_prefix <- test_split[1]
test_suffix <- paste0("_",test_split[length(test_split)])
Plot_title <- Test_map %>%
filter(Prefix == test_prefix) %>%
pull(Test_name)
ylabel <- Metric_map %>%
filter(Suffix == test_suffix) %>%
pull(Label)
test_name <- paste(Plot_title,ylabel)
test_name_noN <- str_replace_all(test_name,pattern = "\\(|\\)| \n","")
test_name_no_space <- str_replace_all(test_name_noN,pattern = " |-",replacement = "_")
test_name_no_space <- str_replace_all(test_name_no_space,pattern = "%",replacement = 'Percent')
colnames(CNB_cross_tmp) <- ifelse(test == colnames(CNB_cross_tmp),test_name_no_space,colnames(CNB_cross_tmp))
f <- as.formula(paste(test_name_no_space,"~","test_sessions_v.gender + Age_centered + I(Age_centered^2) + I(Age_centered^3) + Test_Location + test_sessions_v.gender:Age_centered + test_sessions_v.gender:Test_Location + Test_Location:Age_centered + test_sessions_v.gender:Test_Location:Age_centered"))
mod <- lm(f,data = CNB_cross_tmp)
CR_cross_mod_output[[cntr]] <- mod
ylabels_CR[cntr] <- ylabel
plot_titles_CR[cntr] <- Plot_title
cntr <- cntr + 1
}
tab_model(CR_cross_mod_output[[1]],CR_cross_mod_output[[2]],CR_cross_mod_output[[3]],CR_cross_mod_output[[4]],CR_cross_mod_output[[5]],CR_cross_mod_output[[6]],CR_cross_mod_output[[7]],CR_cross_mod_output[[8]],CR_cross_mod_output[[9]],CR_cross_mod_output[[10]],CR_cross_mod_output[[11]],file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelOutput.html")
theme_set(theme_minimal())
theme_update(axis.title.y = element_text(size = 10))
pdf(file = "/Users/hillmann/Projects/22q/Results/22qRemote_CR_cross_ModelPlots.pdf",width = 14,height = 8)
for(j in 1:length(CR_cross_mod_output)){
grid.arrange(visreg(CR_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Male"), gg = TRUE,overlay = TRUE) + labs(color = "",fill = "",title = paste0(plot_titles_CR[j],": Male")), visreg(CR_cross_mod_output[[j]],xvar = "Age_centered",by = "Test_Location",xlab = "Age (centered at mean)",ylab = ylabels_CR[j],cond = list(test_sessions_v.gender = "Female"), gg = T,overlay = T) + labs(color = "",fill = "",title = paste0(plot_titles_CR[j],": Female")))
}
dev.off()
?log
library(fastDummies)
library(psych)
library(visreg)
library(gtools)
library(tidyverse)
library(Amelia)
library(lubridate)
library(lme4)
library(mgcv)
# Create CNB spaghetti plots
x <- read.csv("/Users/hillmann/Projects/22q_Longitudinal/Data/longitudinal_22q_final_sips_cnb_merged_11december2021.csv")
#x <- x[which(is.na(x$cnb_eff_g) == FALSE),]
motor_mean <- scale(rowMeans(x[,275:276],na.rm=TRUE))
x <- data.frame(x,motor_mean)
x <- x %>%
mutate(pro_td = case_when(pro_td == 0 ~ "PS-",pro_td == 1 ~ "PS+",TRUE ~ NA_character_))
x$pro_td <- as.factor(x$pro_td)
mod1 <- gamm(cnb_eff_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod2 <- gamm(cnb_acc_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod3 <- gamm(cnb_spe_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod4 <- gamm(eff_executive_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod5 <- gamm(eff_memory_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod6 <- gamm(eff_comp_cog_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod7 <- gamm(eff_social_cog_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod8 <- gamm(acc_social_cog_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod9 <- gamm(acc_complex_cog_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod10 <- gamm(acc_executive_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod11 <- gamm(acc_memory_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod12 <- gamm(spe_deliberative_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod13 <- gamm(spe_memory_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod14 <- gamm(spe_rapid_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod15 <- gamm(motor_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod1$gam$data <- x
mod2$gam$data <- x
mod3$gam$data <- x
mod4$gam$data <- x
mod5$gam$data <- x
mod6$gam$data <- x
mod7$gam$data <- x
mod8$gam$data <- x
mod9$gam$data <- x
mod10$gam$data <- x
mod11$gam$data <- x
mod12$gam$data <- x
mod13$gam$data <- x
mod14$gam$data <- x
mod15$gam$data <- x
x <- x %>%
mutate(bblid = ifelse(is.na(bblid.x),bblid.y,bblid.x))
theme_set(theme_minimal())
theme_update(text = element_text(size = 24))
pdf("/Users/hillmann/Projects/22q_Longitudinal/Results/longitudinal_22q_CNB_spaghettiPlots.pdf",height=8,width=12)
visreg(mod1$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Efficiency (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_eff_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod2$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Accuracy (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_acc_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod3$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Speed (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_spe_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod4$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Executive Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_executive_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod5$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_memory_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod6$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Complex Cog Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_comp_cog_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod7$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Social Cog Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_social_cog_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod8$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Social Cog Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_social_cog_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod9$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Complex Cog Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_complex_cog_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod10$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Executive Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_executive_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod11$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_memory_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod12$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Deliberative Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_deliberative_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod13$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_memory_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod14$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Rapid/Executive Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_rapid_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod15$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Motor Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = motor_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
dev.off()
# Create Clinical Trajectory Spaghetti Plot
x_clean <- x %>%
mutate(agedx_sips_years = agedx_sips/12) %>%
mutate(sex = case_when(sex == 1 ~ "Male",sex == 2 ~ "Female",TRUE ~ NA_character_)) %>%
mutate(agedx_sips_years_log10 = log10(agedx_sips_years)) %>%
mutate(agedx_sips_years_winsor45 = ifelse(agedx_sips_years > 45,45,agedx_sips_years))
x_no_na <- x_clean %>%
filter(!is.na(agedx_sips_years),!is.na(pro_td))
gasr_current <- gamm(gasr_current~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos <- gamm(pos~s(agedx_sips_years,by=sex_pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg <- gamm(neg~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis <- gamm(dis~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen <- gamm(gen~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current_log10 <- gamm(gasr_current~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos_log10 <- gamm(pos~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg_log10 <- gamm(neg~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis_log10 <- gamm(dis~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen_log10 <- gamm(gen~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current_winsor45 <- gamm(gasr_current~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos_winsor45 <- gamm(pos~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg_winsor45 <- gamm(neg~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis_winsor45 <- gamm(dis~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen_winsor45 <- gamm(gen~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current$gam$data <- x_clean
pos$gam$data <- x_clean
neg$gam$data <- x_clean
dis$gam$data <- x_clean
gen$gam$data <- x_clean
gasr_current_log10$gam$data <- x_clean
pos_log10$gam$data <- x_clean
neg_log10$gam$data <- x_clean
dis_log10$gam$data <- x_clean
gen_log10$gam$data <- x_clean
gasr_current_winsor45$gam$data <- x_clean
pos_winsor45$gam$data <- x_clean
neg_winsor45$gam$data <- x_clean
dis_winsor45$gam$data <- x_clean
gen_winsor45$gam$data <- x_clean
p_gasr <- visreg(gasr_current$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos <- visreg(pos$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg <- visreg(neg$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis <- visreg(dis$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen <- visreg(gen$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gasr_log10 <- visreg(gasr_current_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos_log10 <- visreg(pos_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg_log10 <- visreg(neg_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis_log10 <- visreg(dis_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen_log10 <- visreg(gen_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gasr_winsor45 <- visreg(gasr_current_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos_winsor45 <- visreg(pos_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg_winsor45 <- visreg(neg_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis_winsor45 <- visreg(dis_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen_winsor45 <- visreg(gen_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
plot_gasr <- ggplot(p_gasr$fit,aes(x = agedx_sips_years,y = visregFit)) +
geom_line(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td,group = bblid),alpha = .35) +
labs(x = "Age",y = "Current Functioning",color = "",fill = "") + geom_point(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td),size = .75) +
geom_smooth(aes(color = pro_td,fill = pro_td)) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr,group = pro_td,fill = pro_td), alpha=0.3, linetype=1, size=0.2) + scale_color_manual(values = c("#313695","#a50026")) + scale_fill_manual(values = c("#313695","#a50026")) + theme(legend.position = "bottom")
library(fastDummies)
library(psych)
library(visreg)
library(gtools)
library(tidyverse)
library(Amelia)
library(lubridate)
library(lme4)
library(mgcv)
# Create CNB spaghetti plots
x <- read.csv("/Users/hillmann/Projects/22q_Longitudinal/Data/longitudinal_22q_final_sips_cnb_merged_11december2021.csv")
#x <- x[which(is.na(x$cnb_eff_g) == FALSE),]
motor_mean <- scale(rowMeans(x[,275:276],na.rm=TRUE))
x <- data.frame(x,motor_mean)
x <- x %>%
mutate(pro_td = case_when(pro_td == 0 ~ "PS-",pro_td == 1 ~ "PS+",TRUE ~ NA_character_))
x$pro_td <- as.factor(x$pro_td)
mod1 <- gamm(cnb_eff_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod2 <- gamm(cnb_acc_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod3 <- gamm(cnb_spe_g~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod4 <- gamm(eff_executive_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod5 <- gamm(eff_memory_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod6 <- gamm(eff_comp_cog_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod7 <- gamm(eff_social_cog_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod8 <- gamm(acc_social_cog_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod9 <- gamm(acc_complex_cog_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod10 <- gamm(acc_executive_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod11 <- gamm(acc_memory_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod12 <- gamm(spe_deliberative_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod13 <- gamm(spe_memory_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod14 <- gamm(spe_rapid_fscore~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod15 <- gamm(motor_mean~s(test_sessions_v.age,by=pro_td)+pro_td,random=list(bblid.x=~1), data=x)
mod1$gam$data <- x
mod2$gam$data <- x
mod3$gam$data <- x
mod4$gam$data <- x
mod5$gam$data <- x
mod6$gam$data <- x
mod7$gam$data <- x
mod8$gam$data <- x
mod9$gam$data <- x
mod10$gam$data <- x
mod11$gam$data <- x
mod12$gam$data <- x
mod13$gam$data <- x
mod14$gam$data <- x
mod15$gam$data <- x
x <- x %>%
mutate(bblid = ifelse(is.na(bblid.x),bblid.y,bblid.x))
theme_set(theme_minimal())
theme_update(text = element_text(size = 24))
pdf("/Users/hillmann/Projects/22q_Longitudinal/Results/longitudinal_22q_CNB_spaghettiPlots.pdf",height=8,width=12)
visreg(mod1$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Efficiency (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_eff_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod2$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Accuracy (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_acc_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod3$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Overall Speed (bifactor g)",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = cnb_spe_g,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod4$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Executive Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_executive_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod5$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_memory_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod6$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Complex Cog Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_comp_cog_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod7$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Social Cog Efficiency",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = eff_social_cog_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod8$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Social Cog Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_social_cog_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod9$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Complex Cog Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_complex_cog_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod10$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Executive Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_executive_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod11$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Accuracy",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = acc_memory_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod12$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Deliberative Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_deliberative_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod13$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Memory Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_memory_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod14$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Rapid/Executive Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = spe_rapid_fscore,color = pro_td,group = bblid),size = .5,alpha = .3)
visreg(mod15$gam,xvar="test_sessions_v.age",by="pro_td",overlay=TRUE,xlab="Age (years)",ylab="CNB Motor Speed",gg=T) + labs(color = "",fill = "") + theme(legend.position = "top") + geom_line(data = x[!is.na(x$pro_td),],aes(x = test_sessions_v.age,y = motor_mean,color = pro_td,group = bblid),size = .5,alpha = .3)
dev.off()
# Create Clinical Trajectory Spaghetti Plot
x_clean <- x %>%
mutate(agedx_sips_years = agedx_sips/12) %>%
mutate(sex = case_when(sex == 1 ~ "Male",sex == 2 ~ "Female",TRUE ~ NA_character_)) %>%
mutate(agedx_sips_years_log10 = log10(agedx_sips_years)) %>%
mutate(agedx_sips_years_winsor45 = ifelse(agedx_sips_years > 45,45,agedx_sips_years))
x_no_na <- x_clean %>%
filter(!is.na(agedx_sips_years),!is.na(pro_td))
gasr_current <- gamm(gasr_current~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos <- gamm(pos~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg <- gamm(neg~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis <- gamm(dis~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen <- gamm(gen~s(agedx_sips_years,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current_log10 <- gamm(gasr_current~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos_log10 <- gamm(pos~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg_log10 <- gamm(neg~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis_log10 <- gamm(dis~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen_log10 <- gamm(gen~s(agedx_sips_years_log10,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current_winsor45 <- gamm(gasr_current~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
pos_winsor45 <- gamm(pos~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
neg_winsor45 <- gamm(neg~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
dis_winsor45 <- gamm(dis~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gen_winsor45 <- gamm(gen~s(agedx_sips_years_winsor45,by=pro_td)+pro_td,random=list(bblid=~1), data=x_clean)
gasr_current$gam$data <- x_clean
pos$gam$data <- x_clean
neg$gam$data <- x_clean
dis$gam$data <- x_clean
gen$gam$data <- x_clean
gasr_current_log10$gam$data <- x_clean
pos_log10$gam$data <- x_clean
neg_log10$gam$data <- x_clean
dis_log10$gam$data <- x_clean
gen_log10$gam$data <- x_clean
gasr_current_winsor45$gam$data <- x_clean
pos_winsor45$gam$data <- x_clean
neg_winsor45$gam$data <- x_clean
dis_winsor45$gam$data <- x_clean
gen_winsor45$gam$data <- x_clean
p_gasr <- visreg(gasr_current$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos <- visreg(pos$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg <- visreg(neg$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis <- visreg(dis$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen <- visreg(gen$gam,xvar = "agedx_sips_years",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gasr_log10 <- visreg(gasr_current_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos_log10 <- visreg(pos_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg_log10 <- visreg(neg_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis_log10 <- visreg(dis_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen_log10 <- visreg(gen_log10$gam,xvar = "agedx_sips_years_log10",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gasr_winsor45 <- visreg(gasr_current_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_pos_winsor45 <- visreg(pos_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_neg_winsor45 <- visreg(neg_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_dis_winsor45 <- visreg(dis_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
p_gen_winsor45 <- visreg(gen_winsor45$gam,xvar = "agedx_sips_years_winsor45",by = "pro_td",overlay = T,gg = T,plot = FALSE)
plot_gasr <- ggplot(p_gasr$fit,aes(x = agedx_sips_years,y = visregFit)) +
geom_line(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td,group = bblid),alpha = .35) +
labs(x = "Age",y = "Current Functioning",color = "",fill = "") + geom_point(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td),size = .75) +
geom_smooth(aes(color = pro_td,fill = pro_td)) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr,group = pro_td,fill = pro_td), alpha=0.3, linetype=1, size=0.2) + scale_color_manual(values = c("#313695","#a50026")) + scale_fill_manual(values = c("#313695","#a50026")) + theme(legend.position = "bottom")
plot_gasr_log10 <- ggplot(p_gasr_log10$fit,aes(x = agedx_sips_years_log10,y = visregFit)) +
geom_line(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years_log10,y = gasr_current,color = pro_td,group = bblid),alpha = .35) +
labs(x = "Age (log 10)",y = "Current Functioning",color = "",fill = "") + geom_point(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years_log10,y = gasr_current,color = pro_td),size = .75) +
geom_smooth(aes(color = pro_td,fill = pro_td)) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr,group = pro_td,fill = pro_td), alpha=0.3, linetype=1, size=0.2) + scale_color_manual(values = c("#313695","#a50026")) + scale_fill_manual(values = c("#313695","#a50026")) + theme(legend.position = "bottom")
plot_gasr
plot_gasr
ggplot(p_gasr$fit,aes(x = agedx_sips_years,y = visregFit)) +
geom_line(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td,group = bblid),alpha = .35) +
labs(x = "Age",y = "Current Functioning",color = "",fill = "") + geom_point(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td),size = .75) +
geom_smooth(aes(color = pro_td,fill = pro_td)) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr,group = pro_td,fill = pro_td), alpha=0.3, linetype=1, size=0.2) + scale_color_manual(values = c("#313695","#a50026")) + scale_fill_manual(values = c("#313695","#a50026")) + theme(legend.position = "bottom")
p_gasr$fit
plot_gasr
plot_gasr <- ggplot(p_gasr$fit,aes(x = agedx_sips_years,y = visregFit)) +
geom_line(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td,group = bblid),alpha = .35) +
labs(x = "Age",y = "Current Functioning",color = "",fill = "") + geom_point(data = x_no_na[!is.na(x_no_na$gasr_current),],aes(x = agedx_sips_years,y = gasr_current,color = pro_td),size = .75) +
geom_smooth(aes(color = pro_td,fill = pro_td)) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr,group = pro_td,fill = pro_td), alpha=0.3, linetype=1, size=0.2) + scale_color_manual(values = c("#313695","#a50026")) + scale_fill_manual(values = c("#313695","#a50026")) + theme(legend.position = "bottom")
plot_gasr
